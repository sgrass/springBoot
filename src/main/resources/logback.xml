<?xml version="1.0" encoding="UTF-8"?>
<!-- 
	scan:当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
	scanPeriod:设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
	debug:当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
 -->
<configuration  scan="true" scanPeriod="60 seconds" debug="false">
    <contextName>logback</contextName>
    <property name="log.path" value="/Users/grass/Downloads/logback.log" />
    <!--输出到控制台-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
      <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
        <level>DEBUG</level>
      </filter>
      <encoder>
        <pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
      </encoder>
    </appender>

    <!--输出到文件-->
		<appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
	    <file>${log.path}</file>
	    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
	    <fileNamePattern>logback.%d{yyyy-MM-dd}.log</fileNamePattern>
	    <!-- 表示只保留最近30天的日志 -->
	    <maxHistory>30</maxHistory>
	    <!-- 指定日志文件的上限大小，例如设置为1GB的话，那么到了这个值，就会删除旧的日志 -->
	    <totalSizeCap>1GB</totalSizeCap>
	    </rollingPolicy>
	    <encoder>
	      <pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
	    </encoder>
		</appender>

    <root level="info">
        <appender-ref ref="console" />
        <appender-ref ref="file" />
    </root>

    <!-- 
      logger 用来设置某一个包或者具体的某一个类的日志打印级别、以及指定appender。
      logger仅有一个name属性，一个可选的level和一个可选的addtivity属性。
      name:用来指定受此loger约束的某一个包或者具体的某一个类。
			level:用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，还有一个特俗值INHERITED或者同义词NULL，代表强制执行上级的级别。如果未设置此属性，那么当前loger将会继承上级的级别。
			addtivity:是否向上级loger传递打印信息。默认是true。 
    -->
    <logger name="com.cx.web"/>
    <logger name="com.cx.web.HelloController" level="DEBUG" additivity="false">
        <appender-ref ref="console"/>
    </logger>
    
    <!--application.properties文件设置 logging.level.com.cx=DEBUG  或者如下显示mybatis sql日志-->
<!--     <logger name="com.cx.mapper" level="DEBUG"/> -->
    
</configuration>